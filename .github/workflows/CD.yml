# Copyright 2023 Jan-Hendrik Ewers
# SPDX-License-Identifier: GPL-3.0-only

name: CD

on:
  workflow_dispatch:
  push:
    tags:
      - "v*.*.*"

jobs:
  setup-envs:
    name: Set up the build names and such
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Version
        id: version
        shell: bash
        run: |
          v=${GITHUB_REF##*/}
          echo "Version: $v"
          echo "::set-output name=version::$v"

      - name: Check version
        shell: bash
        run: |
          rx='^v([0-9]+\.){0,2}(\*|[0-9]+)$'
          VERSION=${{steps.version.outputs.version}}
          if [[ $VERSION =~ $rx ]]; then
            echo "INFO:<-->Version $VERSION"
          else
            echo "ERROR:<->Unable to validate package version: '$VERSION'"
            exit 1
          fi

  generate-changelog:
    name: Generate latest changelog
    needs: setup-envs
    runs-on: ubuntu-latest
    outputs:
      release_body: ${{ steps.release.outputs.release_body }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Generate latest changelog
        uses: orhun/git-cliff-action@v2
        id: git-cliff-latest
        with:
          args: -vv --latest --strip header
        env:
          OUTPUT: CHANGELOG.md

      - name: Check CHANGELOG isn't empty
        run: |
          if [ -z "$(cat CHANGELOG.md)" ]
          then
            exit 1
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: changelog
          path: CHANGELOG.md

  build-python:
    name: Build python
    needs: setup-envs
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Build wheels
        run: pip wheel .

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: pytest_extra_markers*.whl

  publish:
    name: Publish
    needs: [generate-changelog,build-python,setup-envs]
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist

      - name: Download changelog
        uses: actions/download-artifact@v3
        with:
          name: changelog

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          body_path: CHANGELOG.md
          files: |
            dist/**
          name: "Release ${{needs.setup-envs.outputs.version}}"
          generate_release_notes: false

      - name: PyPi
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          packages_dir: dist/
